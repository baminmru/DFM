package com.bami.ef.tent.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class RequestParamDictAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRequestParamDictAllPropertiesEquals(RequestParamDict expected, RequestParamDict actual) {
        assertRequestParamDictAutoGeneratedPropertiesEquals(expected, actual);
        assertRequestParamDictAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRequestParamDictAllUpdatablePropertiesEquals(RequestParamDict expected, RequestParamDict actual) {
        assertRequestParamDictUpdatableFieldsEquals(expected, actual);
        assertRequestParamDictUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRequestParamDictAutoGeneratedPropertiesEquals(RequestParamDict expected, RequestParamDict actual) {
        assertThat(expected)
            .as("Verify RequestParamDict auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRequestParamDictUpdatableFieldsEquals(RequestParamDict expected, RequestParamDict actual) {
        assertThat(expected)
            .as("Verify RequestParamDict relevant properties")
            .satisfies(e -> assertThat(e.getCode()).as("check code").isEqualTo(actual.getCode()))
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getParamtype()).as("check paramtype").isEqualTo(actual.getParamtype()))
            .satisfies(e -> assertThat(e.getValueArray()).as("check valueArray").isEqualTo(actual.getValueArray()))
            .satisfies(e -> assertThat(e.getReferenceTo()).as("check referenceTo").isEqualTo(actual.getReferenceTo()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRequestParamDictUpdatableRelationshipsEquals(RequestParamDict expected, RequestParamDict actual) {
        assertThat(expected)
            .as("Verify RequestParamDict relationships")
            .satisfies(
                e -> assertThat(e.getRequestContentConfig()).as("check requestContentConfig").isEqualTo(actual.getRequestContentConfig())
            );
    }
}
