package com.bami.ef.tent.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class RequestContentAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRequestContentAllPropertiesEquals(RequestContent expected, RequestContent actual) {
        assertRequestContentAutoGeneratedPropertiesEquals(expected, actual);
        assertRequestContentAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRequestContentAllUpdatablePropertiesEquals(RequestContent expected, RequestContent actual) {
        assertRequestContentUpdatableFieldsEquals(expected, actual);
        assertRequestContentUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRequestContentAutoGeneratedPropertiesEquals(RequestContent expected, RequestContent actual) {
        assertThat(expected)
            .as("Verify RequestContent auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRequestContentUpdatableFieldsEquals(RequestContent expected, RequestContent actual) {
        assertThat(expected)
            .as("Verify RequestContent relevant properties")
            .satisfies(e -> assertThat(e.getRequestInfoId()).as("check requestInfoId").isEqualTo(actual.getRequestInfoId()))
            .satisfies(e -> assertThat(e.getParamCode()).as("check paramCode").isEqualTo(actual.getParamCode()))
            .satisfies(e -> assertThat(e.getParamValue()).as("check paramValue").isEqualTo(actual.getParamValue()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRequestContentUpdatableRelationshipsEquals(RequestContent expected, RequestContent actual) {}
}
