package com.bami.tent.request.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class SourceSystemAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSourceSystemAllPropertiesEquals(SourceSystem expected, SourceSystem actual) {
        assertSourceSystemAutoGeneratedPropertiesEquals(expected, actual);
        assertSourceSystemAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSourceSystemAllUpdatablePropertiesEquals(SourceSystem expected, SourceSystem actual) {
        assertSourceSystemUpdatableFieldsEquals(expected, actual);
        assertSourceSystemUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSourceSystemAutoGeneratedPropertiesEquals(SourceSystem expected, SourceSystem actual) {
        assertThat(expected)
            .as("Verify SourceSystem auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSourceSystemUpdatableFieldsEquals(SourceSystem expected, SourceSystem actual) {
        assertThat(expected)
            .as("Verify SourceSystem relevant properties")
            .satisfies(e -> assertThat(e.getCode()).as("check code").isEqualTo(actual.getCode()))
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getCreatedAt()).as("check createdAt").isEqualTo(actual.getCreatedAt()))
            .satisfies(e -> assertThat(e.getCreatedBy()).as("check createdBy").isEqualTo(actual.getCreatedBy()))
            .satisfies(e -> assertThat(e.getUpdatedAt()).as("check updatedAt").isEqualTo(actual.getUpdatedAt()))
            .satisfies(e -> assertThat(e.getUpdatedBy()).as("check updatedBy").isEqualTo(actual.getUpdatedBy()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSourceSystemUpdatableRelationshipsEquals(SourceSystem expected, SourceSystem actual) {}
}
